import*as Common from"../common/common.js";import*as Components from"../components/components.js";import*as Host from"../host/host.js";import*as SDK from"../sdk/sdk.js";import*as UI from"../ui/ui.js";export class SignedExchangeInfoView extends UI.Widget.VBox{constructor(e){super();const t=e.signedExchangeInfo();console.assert(t),this.registerRequiredCSS("chii_network/signedExchangeInfoView.css"),this.element.classList.add("signed-exchange-info-view");const r=new UI.TreeOutline.TreeOutlineInShadow;r.registerRequiredCSS("chii_network/signedExchangeInfoTree.css"),r.element.classList.add("signed-exchange-info-tree"),r.setFocusable(!1),r.makeDense(),r.expandTreeElementsWhenArrowing=!0,this.element.appendChild(r.element);const n=new Map;if(t.errors&&t.errors.length){const e=new Category(r,Common.UIString.UIString("Errors"));for(const r of t.errors){const t=createDocumentFragment();if(t.appendChild(UI.Icon.Icon.create("smallicon-error","prompt-icon")),t.createChild("div","error-log").textContent=r.message,e.createLeaf(t),r.errorField){let e=n.get(r.signatureIndex);e||(e=new Set,n.set(r.signatureIndex,e)),e.add(r.errorField)}}}const a=createDocumentFragment();a.createChild("div","header-name").textContent=Common.UIString.UIString("Signed HTTP exchange");const i=UI.XLink.XLink.create("https://github.com/WICG/webpackage",Common.UIString.UIString("LearnÂ more"),"header-toggle");a.appendChild(i);const o=new Category(r,a);if(t.header){const a=t.header,i=e.redirectDestination(),s=this._formatHeader(Common.UIString.UIString("Request URL"),a.requestUrl);if(i){const e=Components.Linkifier.Linkifier.linkifyRevealable(i,"View request");e.classList.add("header-toggle"),s.appendChild(e)}o.createLeaf(s),o.createLeaf(this._formatHeader(Common.UIString.UIString("Response code"),a.responseCode+"")),o.createLeaf(this._formatHeader(Common.UIString.UIString("Header integrity hash"),a.headerIntegrity)),this._responseHeadersItem=o.createLeaf(this._formatHeader(Common.UIString.UIString("Response headers"),""));const c=a.responseHeaders;for(const e in c){const t=new UI.TreeOutline.TreeElement(this._formatHeader(e,c[e]));t.selectable=!1,this._responseHeadersItem.appendChild(t)}this._responseHeadersItem.expand();for(let e=0;e<a.signatures.length;++e){const t=n.get(e)||new Set,i=a.signatures[e],o=new Category(r,Common.UIString.UIString("Signature"));if(o.createLeaf(this._formatHeader(Common.UIString.UIString("Label"),i.label)),o.createLeaf(this._formatHeaderForHexData(Common.UIString.UIString("Signature"),i.signature,t.has(Protocol.Network.SignedExchangeErrorField.SignatureSig))),i.certUrl){const e=this._formatHeader(Common.UIString.UIString("Certificate URL"),i.certUrl,t.has(Protocol.Network.SignedExchangeErrorField.SignatureCertUrl));if(i.certificates){const t=e.createChild("span","devtools-link header-toggle");t.textContent=Common.UIString.UIString("View certificate"),t.addEventListener("click",Host.InspectorFrontendHost.InspectorFrontendHostInstance.showCertificateViewer.bind(null,i.certificates),!1)}o.createLeaf(e)}o.createLeaf(this._formatHeader(Common.UIString.UIString("Integrity"),i.integrity,t.has(Protocol.Network.SignedExchangeErrorField.SignatureIntegrity))),i.certSha256&&o.createLeaf(this._formatHeaderForHexData(Common.UIString.UIString("Certificate SHA256"),i.certSha256,t.has(Protocol.Network.SignedExchangeErrorField.SignatureCertSha256))),o.createLeaf(this._formatHeader(Common.UIString.UIString("Validity URL"),i.validityUrl,t.has(Protocol.Network.SignedExchangeErrorField.SignatureValidityUrl))),o.createLeaf().title=this._formatHeader(Common.UIString.UIString("Date"),new Date(1e3*i.date).toUTCString(),t.has(Protocol.Network.SignedExchangeErrorField.SignatureTimestamps)),o.createLeaf().title=this._formatHeader(Common.UIString.UIString("Expires"),new Date(1e3*i.expires).toUTCString(),t.has(Protocol.Network.SignedExchangeErrorField.SignatureTimestamps))}}if(t.securityDetails){const e=t.securityDetails,n=new Category(r,Common.UIString.UIString("Certificate"));n.createLeaf(this._formatHeader(Common.UIString.UIString("Subject"),e.subjectName)),n.createLeaf(this._formatHeader(Common.UIString.UIString("Valid from"),new Date(1e3*e.validFrom).toUTCString())),n.createLeaf(this._formatHeader(Common.UIString.UIString("Valid until"),new Date(1e3*e.validTo).toUTCString())),n.createLeaf(this._formatHeader(Common.UIString.UIString("Issuer"),e.issuer))}}_formatHeader(e,t,r){const n=createDocumentFragment(),a=n.createChild("div","header-name");a.textContent=e+": ",n.createChild("span","header-separator");const i=n.createChild("div","header-value source-code");return i.textContent=t,r&&(a.classList.add("error-field"),i.classList.add("error-field")),n}_formatHeaderForHexData(e,t,r){const n=createDocumentFragment(),a=n.createChild("div","header-name");a.textContent=e+": ",n.createChild("span","header-separator");const i=n.createChild("div","header-value source-code hex-data");return i.textContent=t.replace(/(.{2})/g,"$1 "),r&&(a.classList.add("error-field"),i.classList.add("error-field")),n}}export class Category extends UI.TreeOutline.TreeElement{constructor(e,t){super(t,!0),this.selectable=!1,this.toggleOnClick=!0,this.expanded=!0,e.appendChild(this)}createLeaf(e){const t=new UI.TreeOutline.TreeElement(e);return t.selectable=!1,this.appendChild(t),t}}